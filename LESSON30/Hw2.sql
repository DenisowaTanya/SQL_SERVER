USE [WideWorldImporters]

--Исходный запрос

set statistics time on;
SET STATISTICS IO ON;

Select ord.CustomerID, det.StockItemID, SUM(det.UnitPrice), SUM(det.Quantity), COUNT(ord.OrderID) --можно дать имена (для удобства)
FROM Sales.Orders AS ord
JOIN Sales.OrderLines AS det
ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv
ON Inv.OrderID = ord.OrderID
JOIN Sales.CustomerTransactions AS Trans
ON Trans.InvoiceID = Inv.InvoiceID
JOIN Warehouse.StockItemTransactions AS ItemTrans
ON ItemTrans.StockItemID = det.StockItemID
WHERE Inv.BillToCustomerID != ord.CustomerID
AND (Select SupplierId --можно соединить в основном запросе join
FROM Warehouse.StockItems AS It
Where It.StockItemID = det.StockItemID) = 12
AND (SELECT SUM(Total.UnitPrice*Total.Quantity)--можно вынести в сте
FROM Sales.OrderLines AS Total
Join Sales.Orders AS ordTotal
On ordTotal.OrderID = Total.OrderID
WHERE ordTotal.CustomerID = Inv.CustomerID) > 250000
AND DATEDIFF(dd, Inv.InvoiceDate, ord.OrderDate) = 0--можно убрать формулу, и приравнять
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID



----ДАНННЫЕ ИСХОДНОГО ЗАПРОСА

--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 203 мс, истекшее время = 282 мс.

--(затронуто строк: 3619)
--Таблица "StockItemTransactions". Сканирований 1, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 66, физических операций чтения LOB 1, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 130, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItemTransactions". Считано сегментов 1, пропущено 0.
--Таблица "OrderLines". Сканирований 4, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 518, физических операций чтения LOB 5, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 795, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 2, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "CustomerTransactions". Сканирований 5, логических операций чтения 261, физических операций чтения 4, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 253, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 2, логических операций чтения 883, физических операций чтения 4, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 877, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 1, логических операций чтения 72992, физических операций чтения 2, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 8481, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 1, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 33)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 1375 мс, затраченное время = 2790 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.


DBCC FREEPROCCACHE
DBCC DROPCLEANBUFFERS

WITH Filter_CTE AS
		(
		SELECT ordTotal.CustomerID 
		FROM Sales.OrderLines AS Total 
		JOIN Sales.Orders AS ordTotal On ordTotal.OrderID = Total.OrderID
		GROUP BY ordTotal.CustomerID
		HAVING SUM(Total.UnitPrice*Total.Quantity) > 250000
		)
SELECT ord.CustomerID, --ID покупателя
	   det.StockItemID, --ID товара
	   SUM(det.UnitPrice) AS UnitPrice, --сумма цен по заказам
	   SUM(det.Quantity) AS Quantity, --сумма количества по заказам
	   COUNT(ord.OrderID) AS CountOrderID -- количество заказов
FROM Sales.Orders AS ord -- таблица заказов
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Sales.CustomerTransactions AS Trans   ON Trans.InvoiceID = Inv.InvoiceID 
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
JOIN Warehouse.StockItemTransactions AS ItemTrans  ON ItemTrans.StockItemID = It.StockItemID
JOIN Filter_CTE AS F_CTE ON F_CTE.CustomerID = Inv.CustomerID
WHERE It.SupplierId = 12	  
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 


--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 141 мс, истекшее время = 209 мс.

--(затронуто строк: 3619)
--Таблица "StockItemTransactions". Сканирований 1, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 66, физических операций чтения LOB 1, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 130, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItemTransactions". Считано сегментов 1, пропущено 0.
--Таблица "OrderLines". Сканирований 4, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 518, физических операций чтения LOB 5, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 795, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 2, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "CustomerTransactions". Сканирований 5, логических операций чтения 261, физических операций чтения 4, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 253, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 47131, физических операций чтения 32, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 849, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 1, логических операций чтения 72919, физических операций чтения 2, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 8481, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 1, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 30)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 1703 мс, затраченное время = 3748 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.


  ----ИСПРАВЛЕНИЯ ПОСЛЕ ПРОВЕРКИ

select * from Warehouse.StockItems AS It
left join Warehouse.StockItemTransactions AS ItemTrans on ItemTrans.StockItemID = It.StockItemID
where ItemTrans.StockItemID is null

--Запрос в исходной базе действительно ничего не фильтрует, но поскольку мы делали изменения в
--справочнике товаров на предыдущих занятиях, то есть товары, которые не участвуют в транзакциях.
--Хотя с точки зрения логики базы так быть не должно.
--(Я удалила новые, добавленные мной товары, и, значит, можно убрать таблицу из запроса)

Delete Warehouse.StockItems
WHERE StockItemID in (230,231,233)

--На самом деле я уже пробовала удалить таблицы Warehouse.StockItemTransactions и CustomerTransactions,
--потому что они не нужны в SELECT и использовались только для проверки связи. Но цифры запросы резко менялись, по
--сравнению с исходным запросом из-за удаления задваиваний. Я решила, что не в праве менять запрос,
--если его результат меняется. Поэтому оставила эти таблицы

--Посмотрим, могу ли я удалить таблицу  CustomerTransactions

select * from Sales.Invoices AS Inv 
left join Sales.CustomerTransactions AS Trans ON Trans.InvoiceID = Inv.InvoiceID
where Trans.InvoiceID is null

--Запрос пустой, поэтому могу


WITH Filter_CTE AS
		(
		SELECT ordTotal.CustomerID 
		FROM Sales.OrderLines AS Total 
		JOIN Sales.Orders AS ordTotal On ordTotal.OrderID = Total.OrderID
		GROUP BY ordTotal.CustomerID
		HAVING SUM(Total.UnitPrice*Total.Quantity) > 250000
		)
SELECT ord.CustomerID, --ID покупателя
	   det.StockItemID, --ID товара
	   SUM(det.UnitPrice) AS UnitPrice, --сумма цен по заказам
	   SUM(det.Quantity) AS Quantity, --сумма количества по заказам
	   COUNT(ord.OrderID) AS CountOrderID -- количество заказов
FROM Sales.Orders AS ord -- таблица заказов
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
JOIN Filter_CTE AS F_CTE ON F_CTE.CustomerID = Inv.CustomerID
WHERE It.SupplierId = 12 
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 

--Таблица "OrderLines". Сканирований 4, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 331, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 2, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 2, логических операций чтения 883, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 462, логических операций чтения 162058, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--Стало намного лучше, добавим теперь в условие СТЕ

WITH Filter_CTE AS
		(
		SELECT ordTotal.CustomerID 
		FROM Sales.OrderLines AS Total 
		JOIN Sales.Orders AS ordTotal On ordTotal.OrderID = Total.OrderID
		GROUP BY ordTotal.CustomerID
		HAVING SUM(Total.UnitPrice*Total.Quantity) > 250000
		)
SELECT ord.CustomerID, --ID покупателя
	   det.StockItemID, --ID товара
	   SUM(det.UnitPrice) AS UnitPrice, --сумма цен по заказам
	   SUM(det.Quantity) AS Quantity, --сумма количества по заказам
	   COUNT(ord.OrderID) AS CountOrderID -- количество заказов
FROM Sales.Orders AS ord -- таблица заказов
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND ord.CustomerID in (SELECT CustomerID FROM Filter_CTE)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 

--Таблица "OrderLines". Сканирований 4, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 331, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 2, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 54863, логических операций чтения 149816, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 2, логических операций чтения 883, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 25)

--стало хуже, возможно временная таблица или перменная сможет помочь

DECLARE @Customers TABLE (CustomerID INT)

INSERT INTO @Customers

SELECT ordTotal.CustomerID 
FROM Sales.OrderLines AS Total 
JOIN Sales.Orders AS ordTotal On ordTotal.OrderID = Total.OrderID
GROUP BY ordTotal.CustomerID
HAVING SUM(Total.UnitPrice*Total.Quantity) > 250000 

SELECT ord.CustomerID, --ID покупателя
	   det.StockItemID, --ID товара
	   SUM(det.UnitPrice) AS UnitPrice, --сумма цен по заказам
	   SUM(det.Quantity) AS Quantity, --сумма количества по заказам
	   COUNT(ord.OrderID) AS CountOrderID -- количество заказов
FROM Sales.Orders AS ord -- таблица заказов
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND ord.CustomerID in (SELECT CustomerID FROM @Customers)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 


--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 896 мс, истекшее время = 896 мс.
--Таблица "OrderLines". Сканирований 2, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 163, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 1, пропущено 0.
--Таблица "#AFA1B3D0". Сканирований 0, логических операций чтения 462, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 191, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 462)

--(затронуто строк: 11)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 156 мс, затраченное время = 213 мс.

--(затронуто строк: 3619)
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 11767, логических операций чтения 58924, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Сканирований 54863, логических операций чтения 628384, физических операций чтения 5036, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 462, логических операций чтения 169115, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "#AFA1B3D0". Сканирований 1, логических операций чтения 1, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 23)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 2266 мс, затраченное время = 9025 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

--Временная таблица:

SELECT ordTotal.CustomerID 
INTO #Customers
FROM Sales.OrderLines AS Total 
JOIN Sales.Orders AS ordTotal On ordTotal.OrderID = Total.OrderID
GROUP BY ordTotal.CustomerID
HAVING SUM(Total.UnitPrice*Total.Quantity) > 250000 

SELECT ord.CustomerID, --ID покупателя
	   det.StockItemID, --ID товара
	   SUM(det.UnitPrice) AS UnitPrice, --сумма цен по заказам
	   SUM(det.Quantity) AS Quantity, --сумма количества по заказам
	   COUNT(ord.OrderID) AS CountOrderID -- количество заказов
FROM Sales.Orders AS ord -- таблица заказов
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND ord.CustomerID in (SELECT CustomerID FROM #Customers)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 

--Drop table #Customers


--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 13 мс, истекшее время = 13 мс.
--Таблица "OrderLines". Сканирований 2, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 163, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 1, пропущено 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 191, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 462)

--(затронуто строк: 11)

--(затронута одна строка)

-- Время работы SQL Server:
--Время ЦП = 141 мс, затраченное время = 162 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 141 мс, истекшее время = 144 мс.

--(затронуто строк: 3619)
--Таблица "OrderLines". Сканирований 2, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 168, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 1, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 692, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "#Customers__________________________________________________________________________________________________________00000000291A". Сканирований 1, логических операций чтения 1, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 1, логических операций чтения 11400, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 15)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 140 мс, затраченное время = 663 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.


--C временной таблицей стало лучше, попробуем использовать Exists

SELECT ord.CustomerID, --ID покупателя
	   det.StockItemID, --ID товара
	   SUM(det.UnitPrice) AS UnitPrice, --сумма цен по заказам
	   SUM(det.Quantity) AS Quantity, --сумма количества по заказам
	   COUNT(ord.OrderID) AS CountOrderID -- количество заказов
FROM Sales.Orders AS ord -- таблица заказов
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND Exists (SELECT CustomerID FROM #Customers
			 WHERE ord.CustomerID =#Customers.CustomerID)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 

--Разницы в планах и в чтениях нет


--Попробуем убрать таблицу Invoices из JOIN
--и заменим условие Inv.BillToCustomerID != ord.CustomerID на
--Inv.BillToCustomerID != Inv.CustomerID.
--Так сделать можно, поскольку ord.CustomerID=Inv.CustomerID.
--Проверим:
--SELECT *
--FROM Sales.Orders AS ord 
--JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID 
--WHERE Inv.CustomerID<>ORd.CustomerID


SELECT ord.CustomerID, 
	   det.StockItemID,
	   SUM(det.UnitPrice) AS UnitPrice, 
	   SUM(det.Quantity) AS Quantity, 
	   COUNT(ord.OrderID) AS CountOrderID
FROM Sales.Orders AS ord 
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND Exists (SELECT CustomerID FROM #Customers
			 WHERE ord.CustomerID = #Customers.CustomerID)
AND EXists (SELECT * FROM Sales.Invoices AS Inv 
			WHERE Inv.OrderID = ord.OrderID 
			AND Inv.InvoiceDate=ord.OrderDate
			AND Inv.BillToCustomerID<>Inv.CustomerID)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 

--преимуществ это не дало, вернемся к предыдущему запросу, попробуем пройтись по алгоритму

SELECT ord.CustomerID,
	   det.StockItemID,
	   SUM(det.UnitPrice) AS UnitPrice, 
	   SUM(det.Quantity) AS Quantity, 
	   COUNT(ord.OrderID) AS CountOrderID
FROM Sales.Orders AS ord 
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND Exists (SELECT CustomerID FROM #Customers
			 WHERE ord.CustomerID =#Customers.CustomerID)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 

--ПРОЙДЕМ ПО АЛГОРИТМУ ИЗ УРОКА ПО ОПТИМИЗАЦИИ

--1л. Что *ДОЛЖЕН* делать запрос?
/*запрос собирает информацию по покупателям, общая сумма заказов у которых больше 250000,
  отчет формируется только по тем продажам, где покупатель, на которого выставлен счет
  не равен покупателю, который сделал заказ. Нужен определенный поставщик товара (с ID 12)
  Дата продажи должна быть равна дате заказа. Нужен ID покупателя и товара, 
  сумма цен, количество проданного товара и количество заказов.
  Здесь странным кажется сумма цен, я не встречала запросов, где суммировались цены.
  Обычно нужна средня цена, или максимальная или мимнимальная, или последняя, или какой-то процент от цены.
  Остальное кажется вполне нужным и уместным*/

--2л. Действительно ли он делает то, что нужно? ("все врут")
/*При соединении таблицы Invoices с таблицей Orders возможно задвоение,
 Например 2 продажи сделаны на основании одного заказа в один и тот же день.
 Это можно проверить*/
 
 With my_cte
 as
 (SELECT ORD.OrderID,
 INV.InvoiceID,
 ROW_Number() OVER (Partition by ORD.OrderID order by ORD.OrderID) as rn
 FROM Sales.Orders AS ord -- таблица заказов
 JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate)
 SELECT * FROM my_cte
 WHERE rn>1

 --Таких не оказалось, значит одному заказу соответствует одна продажа, задвоений нет.
 
 --3л. Делает ли он еще и то, что не требовалось? лишние поля? Лишние сортировки?
 /*Запрос делает только то, что требуется*/

--4л. Какие у нас свободы? Можно ли какие-то поля заменить другими? "Из преаггрегированной таблицы за вчера?"
/* Предагрегированных таблиц нет, поля заменять не будем*/

--05л. По чему мы оптимизируем? Время? Стоимость? Есть ли предел?
/* Оптимизируем по времени и количеству чтений. Предела нет */

--6т. Есть ли в запросе функции над полями в ON, WHERE итп? Есть ли неявная конвертация типов данных?
/*Функций нет на данный момент*/

--07т. Есть ли какие-то подзапросы, которые можно переписать (например, с windows functions OVER (partition by ...) ) 
/* Подзапросы есть, но переписать не требуется*/

--8т. Можно ли какие-то джойны заменить на exists? NOT IN заменить на IN?  
/* Замена на Exists преимуществ не дала.*/

--9п. Есть ли в *ACTUAL* плане запроса то, что мы не понимаем? Можем ли мы объяснить все сканы и пересортировки? 
/*Сканы объясняются*/

--10п. parameter sniffing? with recomplile? 2 sets?
/* Запрос запускается каждый раз одинаковый*/

--11п. Есть ли предупреждения, желтые или красные?
/*Предупреждений нет*/

--12п. Не много ли тратится на паралеллизм?
/*Паралеллизма нет*/

--13п. Можно ли добавить в запрос "глупые" фильтры? "
/*Попробовала поставить #Customers.CustomerID<>Inv.BillToCustomerID, стало хуже. Других фильтров не придумалось)*/

--14ф. Есть ли предупреждения о недостающих индексах? Хотим ли мы их сделать?
/* Сведений о недостающих индексах нет, но можно попробовать сделать новые*/

CREATE NONCLUSTERED INDEX [Cust_Date] ON [Sales].[Orders]
([CustomerID],[OrderDate] )   -- не сильно изменил ситуацию

CREATE NONCLUSTERED INDEX [Inv_BillOrdIDInvDate] ON [Sales].[Invoices]
([BillToCustomerID],[OrderId],[InvoiceDate])   -- стало намного лучше, этот индекс можно оставить

--Таблица "OrderLines". Сканирований 2, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 168, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 1, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 157, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "#Customers__________________________________________________________________________________________________________00000000291A". Сканирований 1, логических операций чтения 1, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 1, логических операций чтения 186, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--появилось сообщение об отсутствующих индексах, создадим предложенный вариант

CREATE NONCLUSTERED INDEX [Ord_StockOrdQuantUnPr]
ON [Sales].[OrderLines] ([StockItemID])
INCLUDE ([OrderID],[Quantity],[UnitPrice])--не сильно улучшил ситуацию, чтения не изменились, стало немного лучше по времени


--15ф. Есть ли смысл создать дополнительные объекты? Временные (и полувременные) таблицы? Базы? !! Особенно если речь идет о writes
/*Создана временная таблица*/

--16ф. Джобы? Broker? 
/* нет*/

--17ф. Есть ли смысл изменить существующие объекты? Добавить поля? Денормализовать?
/* Можно добавить столбец в CustomerID c bit полем, где указать является ли покупатель
с большой суммой заказов (более 250000) или нет. (1 и 0). Но тут вероятность, что покупатель
станет крупнейшим после следующего заказа. Поэтому не имеет смысла.
Можно добавить поле в каждую продажу где также указать будет ли в этом заказе customerID равен или не равен BillToCustomerID
Тоже Bit (0 - равен, 1 - не равен), но надо вносить изменения в  каждую продажу. Вопрос сомнительный, стоит ли оно того*/

--18а. Можно ли часть работы перевесить на клиента?
/* Клиент не задан*/

--Попробуем запустить целиком запрос

DROP TABLE #Customers

 DBCC FREEPROCCACHE
 DBCC DROPCLEANBUFFERS

SELECT ordTotal.CustomerID 
INTO #Customers
FROM Sales.OrderLines AS Total 
JOIN Sales.Orders AS ordTotal On ordTotal.OrderID = Total.OrderID
GROUP BY ordTotal.CustomerID
HAVING SUM(Total.UnitPrice*Total.Quantity) > 250000 

SELECT ord.CustomerID,
	   det.StockItemID, 
	   SUM(det.UnitPrice) AS UnitPrice,
	   SUM(det.Quantity) AS Quantity, 
	   COUNT(ord.OrderID) AS CountOrderID
FROM Sales.Orders AS ord 
JOIN Sales.OrderLines AS det ON det.OrderID = ord.OrderID
JOIN Sales.Invoices AS Inv ON Inv.OrderID = ord.OrderID AND Inv.BillToCustomerID != ord.CustomerID and Inv.InvoiceDate=ord.OrderDate
JOIN Warehouse.StockItems AS It on It.StockItemID = det.StockItemID
WHERE It.SupplierId = 12 
AND ord.CustomerID in (SELECT CustomerID FROM #Customers)
GROUP BY ord.CustomerID, det.StockItemID
ORDER BY ord.CustomerID, det.StockItemID 


--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 15 мс, истекшее время = 54 мс.
--Таблица "OrderLines". Сканирований 2, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 345, физических операций чтения LOB 3, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 790, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 1, пропущено 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 157, физических операций чтения 1, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 155, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 462)

--(затронуто строк: 11)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 141 мс, затраченное время = 215 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 109 мс, истекшее время = 170 мс.

--(затронуто строк: 3619)
--Таблица "OrderLines". Сканирований 2, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 173, физических операций чтения LOB 1, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 5, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "OrderLines". Считано сегментов 1, пропущено 0.
--Таблица "Worktable". Сканирований 0, логических операций чтения 0, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Orders". Сканирований 1, логических операций чтения 157, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "#Customers__________________________________________________________________________________________________________00000000292A". Сканирований 1, логических операций чтения 1, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "Invoices". Сканирований 1, логических операций чтения 186, физических операций чтения 1, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 184, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.
--Таблица "StockItems". Сканирований 1, логических операций чтения 2, физических операций чтения 0, операций чтения страничного сервера 0, операций чтения, выполненных с упреждением 0, операций чтения страничного сервера, выполненных с упреждением 0, логических операций чтения LOB 0, физических операций чтения LOB 0, операций чтения LOB страничного сервера 0, операций чтения LOB, выполненных с упреждением 0, операций чтения LOB страничного сервера, выполненных с упреждением 0.

--(затронуто строк: 15)

--(затронута одна строка)

-- Время работы SQL Server:
--   Время ЦП = 94 мс, затраченное время = 612 мс.
--Время синтаксического анализа и компиляции SQL Server: 
-- время ЦП = 0 мс, истекшее время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.

-- Время работы SQL Server:
--   Время ЦП = 0 мс, затраченное время = 0 мс.
